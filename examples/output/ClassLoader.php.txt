Reflecting on class `Composer\Autoload\ClassLoader`
 ClassLoader implements a PSR-0 class loader

 See https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md

     $loader = new \Composer\Autoload\ClassLoader();

     // register classes with namespaces
     $loader->add('Symfony\Component', __DIR__.'/component');
     $loader->add('Symfony',           __DIR__.'/framework');

     // activate the autoloader
     $loader->register();

     // to enable searching the include path (eg. for PEAR packages)
     $loader->setUseIncludePath(true);

 In this example, if you try to use a class in the Symfony\Component
 namespace or one of its children (Symfony\Component\Console for instance),
 the autoloader will first look for the class under the component/
 directory, and it will then fallback to the framework/ directory if not
 found before giving up.

 This class is loosely based on the Symfony UniversalClassLoader.
@author Fabien Potencier <fabien@symfony.com>
@author Jordi Boggiano <j.boggiano@seld.be>
 

 Registers a set of PSR-0 directories for a given prefix, either
 appending or prepending to the ones previously set for this prefix.
@param string       $prefix  The prefix
@param array|string $paths   The PSR-0 root directories
@param bool         $prepend Whether to prepend the directories
     
add(string , array|string $paths, bool );


@param array $classMap Class to filename map
     
addClassMap(array $classMap);

 Registers a set of PSR-4 directories for a given namespace, either
 appending or prepending to the ones previously set for this namespace.
@param string       $prefix  The prefix/namespace, with trailing '\\'
@param array|string $paths   The PSR-0 base directories
@param bool         $prepend Whether to prepend the directories
@throws \InvalidArgumentException
     
addPsr4(string , array|string $paths, bool );

 Finds the path to the file where the class is defined.
@param string $class The name of the class
@return string|false The path if found, false otherwise
     
string|false findFile(string $class);

getClassMap();

getFallbackDirs();

getFallbackDirsPsr4();

getPrefixes();

getPrefixesPsr4();

 Can be used to check if the autoloader uses the include path to check
 for classes.
@return bool
     
bool
 getUseIncludePath();

 Loads the given class or interface.
@param string    $class The name of the class
@return bool|null True if loaded, null otherwise
     
bool|null loadClass( );

 Registers this instance as an autoloader.
@param bool $prepend Whether to prepend the autoloader or not
     
register(bool $prepend);

 Registers a set of PSR-0 directories for a given prefix,
 replacing any others previously set for this prefix.
@param string       $prefix The prefix
@param array|string $paths  The PSR-0 base directories
     
set(string , array|string $paths);

 Registers a set of PSR-4 directories for a given namespace,
 replacing any others previously set for this namespace.
@param string       $prefix The prefix/namespace, with trailing '\\'
@param array|string $paths  The PSR-4 base directories
@throws \InvalidArgumentException
     
setPsr4(string , array|string $paths);

 Turns on searching the include path for class files.
@param bool $useIncludePath
     
setUseIncludePath(bool $useIncludePath
);

 Unregisters this instance as an autoloader.
     
unregister();


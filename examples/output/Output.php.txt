Reflecting on class `CI_Output`
 Output Class

 Responsible for sending final output to browser
@package  CodeIgniter
 @subpackage Libraries
 @category Output
@author  ExpressionEngine Dev Team
 @link  http://codeigniter.com/user_guide/libraries/output.html
 

 Constructor

  
__construct();

 Display Output

 All "view" data is automatically put into this variable by the controller class:

 $this->final_output

 This function sends the finalized output data to the browser along
 with any server headers and profile data.  It also stops the
 benchmark timer so the page rendering speed and memory usage can be shown.
@param string
@return mixed
  
@access public
mixed
 _display( );

 Update/serve a cached file
@param object config class
@param object uri class
@return void
  
@access public
void
 _display_cache( ,  );

 Write a Cache File
@param string
@return void
  
@access public
void
 _write_cache( );

 Append Output

 Appends data onto the output string
@param string
@return void
  
@access public
void
 append_output(string );

 Set Cache
@param integer
@return void
  
@access public
void
 cache(integer );

 Enable/disable Profiler
@param bool
@return void
  
@access public
void
 enable_profiler(bool );

 Get Output

 Returns the current output string
@return string
  
@access public
string
 get_output();

 Set Content Type Header
@param string extension of the file we're outputting
@return void
  
@access public
void
 set_content_type(string );

 Set Header

 Lets you set a server header which will be outputted with the final display.

 Note:  If a file is cached, headers will not be sent.  We need to figure out
 how to permit header data to be saved with the cache data...
@param string
@param bool
@return void
  
@access public
void
 set_header(string ,  );

 Set Output

 Sets the output string
@param string
@return void
  
@access public
void
 set_output(string );

 Set Profiler Sections

 Allows override of default / config settings for Profiler section display
@param array
@return void
  
@access public
void
 set_profiler_sections(array );

 Set HTTP Status Header
 moved to Common procedural functions in 1.7.2
@param int  the status code
@param string
@return void
  
@access public
void
 set_status_header(int , string );


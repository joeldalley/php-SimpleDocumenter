Reflecting on class `CI_Router`
 Router Class

 Parses URIs and determines routing
@package  CodeIgniter
 @subpackage Libraries
@author  ExpressionEngine Dev Team
 @category Libraries
 @link  http://codeigniter.com/user_guide/general/routing.html
 

 Constructor

 Runs the route mapping function.
  
__construct();

  Parse Routes

 This function matches any routes that may exist in
 the config/routes.php file against the URI to
 determine if the class/method need to be remapped.
@return void
  
@access private
void
 _parse_routes();

 Set the default controller
@return void
  
@access private
void
 _set_default_controller();

  Set the controller overrides
@param array
@return null
  
@access public
null
 _set_overrides(array );

 Set the Route

 This function takes an array of URI segments as
 input, and sets the current class/method
@param array
@param bool
@return void
  
@access private
void
 _set_request(array , bool );

 Set the route mapping

 This function determines what should be served based on the URI request,
 as well as any "routes" that have been set in the routing config file.
@return void
  
@access private
void
 _set_routing();

 Validates the supplied segments.  Attempts to determine the path to
 the controller.
@param array
@return array
  
@access private
array
 _validate_request(array );

 Fetch the current class
@return string
  
@access public
string
 fetch_class();

  Fetch the sub-directory (if any) that contains the requested controller class
@return string
  
@access public
string
 fetch_directory();

  Fetch the current method
@return string
  
@access public
string
 fetch_method();

 Set the class name
@param string
@return void
  
@access public
void
 set_class(string );

  Set the directory name
@param string
@return void
  
@access public
void
 set_directory(string );

  Set the method name
@param string
@return void
  
@access public
void
 set_method(string );

